# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from GRPC.protos import minio_pb2 as minio__pb2


class MinioMethodsStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CheckConnection = channel.unary_unary(
                '/minio_proto.MinioMethods/CheckConnection',
                request_serializer=minio__pb2.EmptyRequest.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )
        self.CheckUser = channel.unary_unary(
                '/minio_proto.MinioMethods/CheckUser',
                request_serializer=minio__pb2.User.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )
        self.AddUser = channel.unary_unary(
                '/minio_proto.MinioMethods/AddUser',
                request_serializer=minio__pb2.User.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/minio_proto.MinioMethods/DeleteUser',
                request_serializer=minio__pb2.User.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )
        self.GetFilesInfoList = channel.unary_stream(
                '/minio_proto.MinioMethods/GetFilesInfoList',
                request_serializer=minio__pb2.User.SerializeToString,
                response_deserializer=minio__pb2.FileInfoResponse.FromString,
                )
        self.DownloadFileVersion = channel.unary_unary(
                '/minio_proto.MinioMethods/DownloadFileVersion',
                request_serializer=minio__pb2.FileRequest.SerializeToString,
                response_deserializer=minio__pb2.FileResponse.FromString,
                )
        self.AddFileVersion = channel.unary_unary(
                '/minio_proto.MinioMethods/AddFileVersion',
                request_serializer=minio__pb2.FileAddRequest.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )
        self.DeleteFileVersion = channel.unary_unary(
                '/minio_proto.MinioMethods/DeleteFileVersion',
                request_serializer=minio__pb2.FileRequest.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )
        self.DeleteFile = channel.unary_unary(
                '/minio_proto.MinioMethods/DeleteFile',
                request_serializer=minio__pb2.FileRequest.SerializeToString,
                response_deserializer=minio__pb2.Status.FromString,
                )


class MinioMethodsServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CheckConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFilesInfoList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFileVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddFileVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFileVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MinioMethodsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CheckConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckConnection,
                    request_deserializer=minio__pb2.EmptyRequest.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
            'CheckUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckUser,
                    request_deserializer=minio__pb2.User.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
            'AddUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUser,
                    request_deserializer=minio__pb2.User.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=minio__pb2.User.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
            'GetFilesInfoList': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFilesInfoList,
                    request_deserializer=minio__pb2.User.FromString,
                    response_serializer=minio__pb2.FileInfoResponse.SerializeToString,
            ),
            'DownloadFileVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadFileVersion,
                    request_deserializer=minio__pb2.FileRequest.FromString,
                    response_serializer=minio__pb2.FileResponse.SerializeToString,
            ),
            'AddFileVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.AddFileVersion,
                    request_deserializer=minio__pb2.FileAddRequest.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
            'DeleteFileVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFileVersion,
                    request_deserializer=minio__pb2.FileRequest.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=minio__pb2.FileRequest.FromString,
                    response_serializer=minio__pb2.Status.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'minio_proto.MinioMethods', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MinioMethods(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CheckConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/CheckConnection',
            minio__pb2.EmptyRequest.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/CheckUser',
            minio__pb2.User.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/AddUser',
            minio__pb2.User.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/DeleteUser',
            minio__pb2.User.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFilesInfoList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/minio_proto.MinioMethods/GetFilesInfoList',
            minio__pb2.User.SerializeToString,
            minio__pb2.FileInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFileVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/DownloadFileVersion',
            minio__pb2.FileRequest.SerializeToString,
            minio__pb2.FileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddFileVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/AddFileVersion',
            minio__pb2.FileAddRequest.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFileVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/DeleteFileVersion',
            minio__pb2.FileRequest.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/minio_proto.MinioMethods/DeleteFile',
            minio__pb2.FileRequest.SerializeToString,
            minio__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
